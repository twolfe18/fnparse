
# How to run all the scripts in this directory by hand.
# By hand because it needs to be asyncronous (qsub takes a while and doesn't block)


############################################################################################
### CREATE MANY SHARDS OF FEATURES

# Start redis parse servers.
# These slightly an accident of history with some meh reasons:
# 1) I didn't originally serialize the parses with the Propbank data
# 2) I wanted a way to cache parses across machines
# 3) I can fit all of the FNParses in memory, but not with the parses as well
#qsub -N parse-fPreComp ./scripts/propbank-train-redis-parse-server.sh
#qsub -N parse-fPreComp ./scripts/propbank-train-redis-parse-server.sh
#qsub -N parse-fPreComp ./scripts/propbank-train-redis-parse-server.sh
#qsub -N parse-fPreComp ./scripts/propbank-train-redis-parse-server.sh
# Now look up the machines these were dispatched to and copy those namaes into the array below.


#WORKING_DIR=experiments/precompute-features/propbank/sep14a/raw-shards
WORKING_DIR=/export/projects/twolfe/fnparse-output/experiments/precompute-features/propbank/sep14b/raw-shards
JAR=target/fnparse-1.0.6-SNAPSHOT-jar-with-dependencies.jar
NUM_SHARDS=400
PARSE_REDIS_SERVERS=(r8n07 r8n08 r8n11 r8n12)

mkdir -p $WORKING_DIR/sge-logs

echo "copyinig jar to a safe place..."
JAR_STABLE=$WORKING_DIR/fnparse.jar
echo "    $JAR"
echo "==> $JAR_STABLE"
cp $JAR $JAR_STABLE

# TODO move `cp $JAR $JAR_STABLE` up to this script
echo "starting at `date`" >>$WORKING_DIR/commands.txt
for i in `seq $NUM_SHARDS | awk '{print $1 - 1}'`; do
  WD=$WORKING_DIR/job-$i-of-$NUM_SHARDS
  J=`echo $i | awk '{print $1 % 4}'`
  PS=${PARSE_REDIS_SERVERS[$J]}
  echo "dispatching to $PS"
  mkdir -p $WD
  COMMAND="qsub -N fPreComp-$i-$NUM_SHARDS \
    -o $WORKING_DIR/sge-logs \
    scripts/precompute-features/extract-one-shard.sh \
      $WD \
      $JAR_STABLE \
      $i \
      $NUM_SHARDS \
      $PS"
   echo $COMMAND >>$WORKING_DIR/commands.txt
   eval $COMMAND
done


############################################################################################
### MERGE MANY SHARDS INTO A COHERENT ALPHABET
PARENT=/export/projects/twolfe/fnparse-output/experiments/precompute-features/propbank/sep14b/merged-shards
mkdir $PARENT/first
./scripts/precompute-features/merge-many-shards.sh \
  <(find /export/projects/twolfe/fnparse-output/experiments/precompute-features/propbank/sep14b/raw-shards/ -type d -iname 'job*') \
  $PARENT/first \
  first \
  target/fnparse-1.0.6-SNAPSHOT-jar-with-dependencies.jar

mkdir $PARENT/second
./scripts/precompute-features/merge-many-shards.sh \
  <(find $PARENT/first -type d -iname 'merged-*') \
  $PARENT/second \
  second \
  target/fnparse-1.0.6-SNAPSHOT-jar-with-dependencies.jar

mkdir $PARENT/third
./scripts/precompute-features/merge-many-shards.sh \
  <(find $PARENT/second -type d -iname 'merged-*') \
  $PARENT/third \
  third \
  target/fnparse-1.0.6-SNAPSHOT-jar-with-dependencies.jar

mkdir $PARENT/forth
./scripts/precompute-features/merge-many-shards.sh \
  <(find $PARENT/third -type d -iname 'merged-*') \
  $PARENT/forth \
  forth \
  target/fnparse-1.0.6-SNAPSHOT-jar-with-dependencies.jar

mkdir $PARENT/fifth
./scripts/precompute-features/merge-many-shards.sh \
  <(find $PARENT/forth -type d -iname 'merged-*') \
  $PARENT/fifth \
  fifth \
  target/fnparse-1.0.6-SNAPSHOT-jar-with-dependencies.jar

mkdir $PARENT/sixth
./scripts/precompute-features/merge-many-shards.sh \
  <(find $PARENT/fifth -type d -iname 'merged-*') \
  $PARENT/sixth \
  sixth \
  target/fnparse-1.0.6-SNAPSHOT-jar-with-dependencies.jar

mkdir $PARENT/seventh
./scripts/precompute-features/merge-many-shards.sh \
  <(find $PARENT/sixth -type d -iname 'merged-*') \
  $PARENT/seventh \
  seventh \
  target/fnparse-1.0.6-SNAPSHOT-jar-with-dependencies.jar


############################################################################################
### COMPUTE INFORMATION GAIN
WD=/export/projects/twolfe/fnparse-output/experiments/precompute-features/propbank/sep14b/
mkdir -p $WD/ig
for VERSION in first second third forth fifth sixth; do
  TOP_TEMPLATES=$WD/ig/job-$VERSION/template-ig-name.txt
  mkdir -p $WD/ig/sge-logs
  qsub -N IG-$VERSION -o $WD/ig/sge-logs \
    ./scripts/precompute-features/compute-ig.sh \
      $WD/merged-shards/$VERSION/merged-0 \
      $WD/ig/template-ig-name.${VERSION}.txt \
      target/fnparse-1.0.6-SNAPSHOT-jar-with-dependencies.jar
done




# vim: set syntax=sh
